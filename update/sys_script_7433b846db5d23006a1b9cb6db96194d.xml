<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_envision_itam_take_delivery</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_envision_itam_take_delivery">stateCHANGESTO2^EQ<item endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="false" value="2"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>生成入库任务(收货后)</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	//入库清单
	var gr=new GlideRecord("x_envision_itam_task_delivery_detail");
	gr.addQuery("parent_id",current.sys_id);
	gr.query(); 
	var haveHardware=false;//硬件资产 
	while(gr.next()){
		//硬件资产
		if(gr.model_category && gr.model_category.asset_class=="alm_hardware"){
			haveHardware=true;
			break;
		}
		
	}
	var task=new GlideRecord("x_envision_itam_in_stockroom_task");
	//该入库单存在有形资产
	//才生成入库任务单
	if(haveHardware){
		//当前收货单对应的入库任务单不存在时才创建新的入库Task
		//task.state="02";//recevied
		task.state="03";//started
		task.managed_by=gs.getUserID();//资产协管员，仓库管理员
		task.po_number=current.contract.vendor_contract;
		task.description="收货时自动生成入库任务单";
		task.short_description=task.description; 
		task.stockroom=current.stockroom;
		task.assistant=current.assistant;
		var now=new GlideDateTime();
		task.start_time=now;
		now.addDaysLocalTime(7);
		task.stop_time=now; 
		task.take_delivery_order=current.sys_id;
		task.insert();
	}  
	gr.query();
	while(gr.next()){
		var count=gr.asset_count;
		//gs.info(">>>>>>JK:gr.model_category.asset_class:"+gr.model_category.asset_class);
		for(var i=1;i<=count;i++){
			var isHardware=(gr.model_category.asset_class=="alm_hardware");
			//生成资产数据
			var asset=new GlideRecord("alm_asset");
			asset.managed_by=current.stockroom.manager;//资产协管员，仓库管理员
			asset.owned_by=current.stockroom.manager;// 
			asset.x_envision_itam_cost_center_manager=current.cost_center.manager;//资产管理员，成本中心管理员
			if(gr.model_category && isHardware){
				//硬件资产需要手机端通过入库任务完成
				asset.install_status="9";//In transit
				asset.sys_class_name="alm_hardware";
				asset.x_envision_itam_asset_type="Hardware";
			} else {
				//非硬件资产，则直接入库
				asset.install_status="6";//In stock
				asset.stockroom=current.stockroom;
				asset.sys_class_name="alm_consumable";
				asset.x_envision_itam_asset_type="Consumables";
			}
			asset.model_category=gr.model_category;
			asset.model=gr.model;
			asset.po_number=current.contract.vendor_contract;
			asset.u_contract_no=current.contract;
			asset.cost_center=current.cost_center;
			//采购员对应的信息
			if(current.contract){
				asset.location=current.contract.x_envision_itam_purchaser.location;
				asset.department=current.contract.x_envision_itam_purchaser.department;
				asset.company=current.contract.x_envision_itam_purchaser.company; 
			}
			
			asset.insert();
			
			if(task.sys_id && isHardware){
				var detail=new GlideRecord("x_envision_itam_in_stockroom_task_detail");
				//入库任务清单
				detail.asset_tag=asset.sys_id;
				detail.task_number=task.sys_id;
				detail.model_category=current.model_category;
				detail.delivery_number=1;
				detail.insert();
			}
		}
	}
	
	
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>yanyong.peng</sys_created_by>
        <sys_created_on>2018-10-23 07:00:59</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>7433b846db5d23006a1b9cb6db96194d</sys_id>
        <sys_mod_count>69</sys_mod_count>
        <sys_name>生成入库任务(收货后)</sys_name>
        <sys_overrides/>
        <sys_package display_value="Envision ITAM" source="x_enven_envision_i">684921c1db2ce3806a1b9cb6db96196a</sys_package>
        <sys_policy/>
        <sys_scope display_value="Envision ITAM">684921c1db2ce3806a1b9cb6db96196a</sys_scope>
        <sys_update_name>sys_script_7433b846db5d23006a1b9cb6db96194d</sys_update_name>
        <sys_updated_by>yanyong.peng</sys_updated_by>
        <sys_updated_on>2018-11-11 01:41:52</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=7433b846db5d23006a1b9cb6db96194d"/>
</record_update>
